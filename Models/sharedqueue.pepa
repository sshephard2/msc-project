/*
 * Shared queue model
 *
 * middleware architecture with distributed database
 * one DB node for Athletics tickets, one node for Cycling
 *
 */

a = 1.0; /* Rate of booking Athletics tickets */
c = 1.0; /* Rate of booking Cycling tickets */

q = 100.0; /* Rate of consuming from queue */
db = 5.0; /* Rate of servicing DB requests */

/* Web front-end process */
Website = (book_a, a).Website + (book_c, c).Website;

/* Shared queue process */
Q_0 = (book_a, T).Q_A + (book_c, T).Q_C;
Q_A = (queue_a, T).Q_0;
Q_C = (queue_c, T).Q_0;

/* DB node processes */
DB_1 = (queue_a, q).DBsrv_1;
DBsrv_1 = (dbsrv_1, db).DB_1;

DB_2 = (queue_c, q).DBsrv_2;
DBsrv_2 = (dbsrv_2, db).DB_2;

/* Service processes for DB nodes */
Service_1 = (dbsrv_1, db).Service_1;
Service_2 = (dbsrv_2, db).Service_2;

Website <book_a, book_c> Q_0[10]
	<queue_a, queue_c> (DB_1 || DB_2)
	<dbsrv_1, dbsrv_2> (Service_1 || Service_2)
