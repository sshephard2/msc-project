/*
 * Shared queue model
 *
 * middleware architecture with distributed database
 * one DB node for Athletics tickets, one node for Cycling
 *
 */

a = 10.0; /* Rate of booking Athletics tickets */
c = 1.0; /* Rate of booking Cycling tickets */

q = 1000.0; /* Rate of consuming from queue */
db = 100.0; /* Rate of servicing DB requests */

/* Web front-end process */
Website = (book_athletics, a).Website + (book_cycling, c).Website;

/* Shared queue process */
Q_empty = (book_athletics, T).Q_athletics + (book_cycling, T).Q_cycling;
Q_athletics = (book_athletics_db, T).Q_empty;
Q_cycling = (book_cycling_db, T).Q_empty;

/* DB node processes */
DBnode_1 = (book_athletics_db, q).DBnode_1_srv;
DBnode_1_srv = (srv_db_1, db).DBnode_1;

DBnode_2 = (book_cycling_db, q).DBnode_2_srv;
DBnode_2_srv = (srv_db_2, db).DBnode_2;

/* Service processes for DB nodes */
Service1 = (srv_db_1, db).Service1;
Service2 = (srv_db_2, db).Service2;

Website <book_athletics, book_cycling> Q_empty[10]
  <book_athletics_db> DBnode_1
  <book_cycling_db> DBnode_2
  <srv_db_1> Service1
  <srv_db_2> Service2
