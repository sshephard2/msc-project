/*
 * Shared queue model
 *
 * middleware architecture with distributed database
 * one DB node for Athletics tickets, one node for Cycling
 *
 */

a = 10.0; /* Rate of booking Athletics tickets */
c = 1.0; /* Rate of booking Cycling tickets */

db_a = 2.0; /* Maximum throughput of Athletics DB */
db_c = 2.0; /* Maximum throughput of Cycling DB */

Website = (book_athletics, a).Website + (book_cycling, c).Website; /* Web front-end process */

Athletics_arrival = (book_athletics, a).Athletics_arrival; /* Athletics arrival process */
Athletics_service = (book_athletics_db, db_a).Athletics_service; /* Athletics service process */

Cycling_arrival = (book_cycling, a).Cycling_arrival; /* Cycling arrival process */
Cycling_service = (book_cycling_db, db_c).Cycling_service; /* Cycling service process */

Q_empty = (book_athletics, T).Q_athletics + (book_cycling, T).Q_cycling;
Q_athletics = (book_athletics_db, T).Q_empty;
Q_cycling = (book_cycling_db, T).Q_empty;

Website <book_athletics, book_cycling>
(((Athletics_arrival <book_athletics> Q_empty[10] <book_athletics_db> Athletics_service) <book_cycling> Cycling_arrival) <book_cycling_db> Cycling_service)
