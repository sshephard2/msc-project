/*
 * Shared queue model
 *
 * middleware architecture with distributed database
 * one DB node for Athletics tickets, one node for Cycling
 * no separate modelling of queue arrival processes
 *
 */

a = 10.0; /* Rate of booking Athletics tickets */
c = 1.0; /* Rate of booking Cycling tickets */

db_1 = 2.0; /* Maximum throughput of DB node 1 */
db_2 = 2.0; /* Maximum throughput of DB node 2 */

Website = (book_athletics, a).Website + (book_cycling, c).Website; /* Web front-end process */

DBnode_1 = (book_athletics_db, db_1).DBnode_1; /* DB node 1 service process */
DBnode_2 = (book_cycling_db, db_2).DBnode_2; /* DB node 2 service process */

Q_empty = (book_athletics, T).Q_athletics + (book_cycling, T).Q_cycling;
Q_athletics = (book_athletics_db, T).Q_empty;
Q_cycling = (book_cycling_db, T).Q_empty;

Website <book_athletics, book_cycling> Q_empty[10]
  <book_athletics_db> DBnode_1
  <book_cycling_db> DBnode_2
