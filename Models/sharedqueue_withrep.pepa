/*
 * Replicated distributed DB model
 *
 * middleware architecture with distributed database with replication
 * DB node 1 for Athletics and Cycling tickets
 * DB node 2 for Cycling and Diving tickets
 * DB node 3 for Diving and Athletics tickets
 *
 */

a = 100.0; /* Rate of booking Athletics tickets */
c = 1.0; /* Rate of booking Cycling tickets */
d = 1.0; /* Rate of booking Diving tickets */

q = 1000.0; /* Rate of consuming from queue */
db = 100.0; /* Rate of servicing DB requests */

/* Web front-end process */
Website = (book_a, a).Website + (book_c, c).Website  + (book_d, d).Website;

/* Shared queue process */
Q_0 = (book_a, T).Q_A + (book_c, T).Q_C + (book_d, T).Q_D;
Q_A = (queue_a, T).Q_0;
Q_C = (queue_c, T).Q_0;
Q_D = (queue_d, T).Q_0;

/* DB node processes */
DB_1 = (queue_a, q).DBsrv_1 + (queue_c, q).DBsrv_1;
DBsrv_1 = (dbsrv_1, T).DB_1;

DB_2 = (queue_c, q).DBsrv_2 + (queue_d, q).DBsrv_2;
DBsrv_2 = (dbsrv_2, T).DB_2;

DB_3 = (queue_d, q).DBsrv_3 + (queue_a, q).DBsrv_3;
DBsrv_3 = (dbsrv_3, T).DB_3;

/* Service processes for DB nodes */
Service_1 = (dbsrv_1, db).Service_1;
Service_2 = (dbsrv_2, db).Service_2;
Service_3 = (dbsrv_3, db).Service_3;

Website <book_a, book_c, book_d> Q_0[10]
  <queue_a, queue_c> DB_1
  <queue_c, queue_d> DB_2
  <queue_d, queue_a> DB_3
  <dbsrv_1> Service_1
  <dbsrv_2> Service_2
  <dbsrv_3> Service_3
