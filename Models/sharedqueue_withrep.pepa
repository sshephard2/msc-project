/*
 * Replicated distributed DB model
 *
 * middleware architecture with distributed database with replication
 * DB node 1 for Athletics and Cycling tickets
 * DB node 2 for Cycling and Diving tickets
 * DB node 3 for Diving and Athletics tickets
 *
 */

a = 10.0; /* Rate of booking Athletics tickets */
c = 1.0; /* Rate of booking Cycling tickets */
d = 1.0; /* Rate of booking Diving tickets */

q = 1000.0; /* Rate of consuming from queue */
db = 100.0; /* Rate of servicing DB requests */

/* Web front-end process */
Website = (book_athletics, a).Website + (book_cycling, c).Website  + (book_diving, d).Website;

/* Shared queue process */
Q_empty = (book_athletics, T).Q_athletics + (book_cycling, T).Q_cycling + (book_diving, T).Q_diving;
Q_athletics = (book_athletics_db, T).Q_empty;
Q_cycling = (book_cycling_db, T).Q_empty;
Q_diving = (book_diving_db, T).Q_empty;

/* DB node processes */
DBnode_1 = (book_athletics_db, q).DBnode_1_srv + (book_cycling_db, q).DBnode_1_srv;
DBnode_1_srv = (srv_db_1, T).DBnode_1;

DBnode_2 = (book_cycling_db, q).DBnode_2_srv + (book_diving_db, q).DBnode_2_srv;
DBnode_2_srv = (srv_db_2, T).DBnode_2;

DBnode_3 = (book_diving_db, q).DBnode_3_srv + (book_athletics_db, q).DBnode_3_srv;
DBnode_3_srv = (srv_db_3, T).DBnode_3;

/* Service processes for DB nodes */
Service1 = (srv_db_1, db).Service1;
Service2 = (srv_db_2, db).Service2;
Service3 = (srv_db_3, db).Service3;

Website <book_athletics, book_cycling, book_diving> Q_empty[10]
  <book_athletics_db, book_cycling_db> DBnode_1
  <book_cycling_db, book_diving_db> DBnode_2
  <book_diving_db, book_athletics_db> DBnode_3
  <srv_db_1> Service1
  <srv_db_2> Service2
  <srv_db_3> Service3
